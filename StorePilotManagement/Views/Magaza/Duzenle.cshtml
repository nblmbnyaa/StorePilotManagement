@using StorePilotManagement.ViewModels
@model MagazaViewModel

@{
    ViewData["Title"] = "Mağaza Düzenle";
}

<h2>Mağaza Düzenle</h2>

@if (TempData["BasariMesaji"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["BasariMesaji"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["HataMesaji"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["HataMesaji"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<form asp-action="Duzenle" method="post">
    <input type="hidden" asp-for="Uuid" />

    <div class="row">
        <div class="col-md-6">
            <div class="form-group mb-2">
                <label>Adı</label>
                <input asp-for="Adi" class="form-control" />
                <span asp-validation-for="Adi" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label>Ünvan</label>
                <input asp-for="Unvan" class="form-control" />
            </div>
            <div class="form-group mt-2">
                <label>Bölge</label>
                <select asp-for="BolgeUuid" asp-items="Model.TumBolgeler" class="form-control">
                    <option value="">-- Seçiniz --</option>
                </select>
                <span asp-validation-for="BolgeUuid" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label>Adres</label>
                <input asp-for="Adresi" class="form-control" />
            </div>

            <div class="form-group mb-2">
                <label>İl</label>
                <input asp-for="Il" class="form-control" />
            </div>

            <div class="form-group mb-2">
                <label>İlçe</label>
                <input asp-for="Ilce" class="form-control" />
            </div>

            <div class="form-group mb-2">
                <label>Mahalle</label>
                <input asp-for="Mahalle" class="form-control" />
            </div>

            <div class="form-group mb-2">
                <label>Adres Notu</label>
                <input asp-for="AdresNotu" class="form-control" />
            </div>

            <div class="form-group mt-3">
                <label>Konum Seç (Harita Üzerinden)</label>
                <div id="map" style="height: 300px; width: 100%;"></div>
            </div>

            <input type="hidden" asp-for="KonumEnlem" id="KonumEnlem" />
            <input type="hidden" asp-for="KonumBoylam" id="KonumBoylam" />

            <div class="mt-2">
                <span class="text-muted">Seçilen Enlem: <span id="lblEnlem">@Model.KonumEnlem</span></span><br />
                <span class="text-muted">Seçilen Boylam: <span id="lblBoylam">@Model.KonumBoylam</span></span>
            </div>

            <div class="form-group mb-2">
                <label>VKN</label>
                <input asp-for="Vkn" class="form-control" />
            </div>

            <div class="form-check mt-2">
                <input asp-for="PasifMi" class="form-check-input" />
                <label asp-for="PasifMi" class="form-check-label">Pasif</label>
            </div>
        </div>

        <div class="col-md-6">
            <h5>Yetkililer</h5>
            <div id="yetkili-listesi">
                @for (int i = 0; i < Model.Yetkililer.Count; i++)
                {
                    <div class="yetkili-item border p-3 mb-3 rounded" data-index="@i">
                        <input type="hidden" name="Yetkililer[@i].Uuid" value="@Model.Yetkililer[i].Uuid" />
                        <div class="form-group mb-2">
                            <label>Ad Soyad</label>
                            <input name="Yetkililer[@i].AdiSoyadi" class="form-control" value="@Model.Yetkililer[i].AdiSoyadi" required />
                        </div>
                        <div class="form-group mb-2">
                            <label>Cep Tel</label>
                            <input name="Yetkililer[@i].CepTel" class="form-control" value="@Model.Yetkililer[i].CepTel" />
                        </div>
                        <div class="form-group mb-2">
                            <label>E-Posta</label>
                            <input name="Yetkililer[@i].EPostaAdresi" class="form-control" value="@Model.Yetkililer[i].EPostaAdresi" />
                        </div>
                        <div class="form-check mb-2">
                            <input asp-for="Yetkililer[@i].IsMaster" class="form-check-input" />
                            <label class="form-check-label">Ana Yetkili</label>
                        </div>
                        <button type="button" class="btn btn-sm btn-danger remove-yetkili">Sil</button>
                    </div>
                }
            </div>

            <button type="button" id="addYetkili" class="btn btn-sm btn-secondary">+ Yetkili Ekle</button>
        </div>
    </div>

    <button type="submit" class="btn btn-success mt-3">Kaydet</button>
    <a asp-action="Liste" class="btn btn-secondary mt-3">İptal</a>
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        let yetkiliIndex = @Model.Yetkililer.Count;

        $('#addYetkili').on('click', function () {
            const template = `
                <div class="yetkili-item border p-3 mb-3 rounded" data-index="${yetkiliIndex}">
                    <div class="form-group mb-2">
                        <label>Ad Soyad</label>
                        <input name="Yetkililer[${yetkiliIndex}].AdiSoyadi" class="form-control" required />
                    </div>
                    <div class="form-group mb-2">
                        <label>Cep Tel</label>
                        <input name="Yetkililer[${yetkiliIndex}].CepTel" class="form-control" />
                    </div>
                    <div class="form-group mb-2">
                        <label>E-Posta</label>
                        <input name="Yetkililer[${yetkiliIndex}].EPostaAdresi" class="form-control" />
                    </div>
                    <div class="form-check mb-2">
                        <input type="checkbox" name="Yetkililer[${yetkiliIndex}].IsMaster" class="form-check-input" />
                        <label class="form-check-label">Ana Yetkili</label>
                    </div>
                    <button type="button" class="btn btn-sm btn-danger remove-yetkili">Sil</button>
                </div>`;
            $('#yetkili-listesi').append(template);
            yetkiliIndex++;
        });

        $(document).on('click', '.remove-yetkili', function () {
            if ($('.yetkili-item').length > 1) {
                $(this).closest('.yetkili-item').remove();
            } else {
                alert("En az bir yetkili olmalı.");
            }
        });

        setTimeout(function () {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                const bsAlert = bootstrap.Alert.getOrCreateInstance(alert);
                bsAlert.close();
            });
        }, 4000);
    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        var map = L.map('map').setView([39.92, 32.85], 6); // Türkiye merkezi

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap katkıda bulunanlar'
        }).addTo(map);

        var marker;

        function updateMarker(lat, lng) {
            document.getElementById("KonumEnlem").value = lat.toString().replace('.', ',');
            document.getElementById("KonumBoylam").value = lng.toString().replace('.', ',');

            document.getElementById("lblEnlem").innerText = lat.toFixed(6);
            document.getElementById("lblBoylam").innerText = lng.toFixed(6);
        }


        map.on('click', function (e) {
            var lat = e.latlng.lat;
            var lng = e.latlng.lng;

            if (marker) {
                marker.setLatLng([lat, lng]);
            } else {
                marker = L.marker([lat, lng]).addTo(map);
            }

            updateMarker(lat, lng);
        });

        // Eğer modelde koordinatlar varsa başlangıç konumu olarak göster
        var initialLat = parseFloat('@Model.KonumEnlem.ToString("F6", System.Globalization.CultureInfo.InvariantCulture)');
        var initialLng = parseFloat('@Model.KonumBoylam.ToString("F6", System.Globalization.CultureInfo.InvariantCulture)');

        if (!isNaN(initialLat) && !isNaN(initialLng) && initialLat !== 0 && initialLng !== 0) {
            marker = L.marker([initialLat, initialLng]).addTo(map);
            map.setView([initialLat, initialLng], 14);
            updateMarker(initialLat, initialLng);
        }
    </script>
}
